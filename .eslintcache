[{"/home/ekwav/dev/Hypixel-react/src/index.tsx":"1","/home/ekwav/dev/Hypixel-react/src/routes.tsx":"2","/home/ekwav/dev/Hypixel-react/src/api/WebsocketHelper.tsx":"3","/home/ekwav/dev/Hypixel-react/src/utils/LoadingUtils.tsx":"4","/home/ekwav/dev/Hypixel-react/src/api/ApiHelper.tsx":"5","/home/ekwav/dev/Hypixel-react/src/utils/CacheUtils.tsx":"6","/home/ekwav/dev/Hypixel-react/src/pages/AuctionDetails/AuctionDetails.tsx":"7","/home/ekwav/dev/Hypixel-react/src/pages/ItemDetails/ItemDetails.tsx":"8","/home/ekwav/dev/Hypixel-react/src/pages/NotFound/NotFound.tsx":"9","/home/ekwav/dev/Hypixel-react/src/pages/PlayerDetails/PlayerDetails.tsx":"10","/home/ekwav/dev/Hypixel-react/src/components/MainApp/MainApp.tsx":"11","/home/ekwav/dev/Hypixel-react/src/utils/Formatter.tsx":"12","/home/ekwav/dev/Hypixel-react/src/utils/Parser/APIResponseParser.tsx":"13","/home/ekwav/dev/Hypixel-react/src/api/ApiTypes.d.tsx":"14","/home/ekwav/dev/Hypixel-react/src/components/AuctionDetails/AuctionDetails.tsx":"15","/home/ekwav/dev/Hypixel-react/src/components/Search/Search.tsx":"16","/home/ekwav/dev/Hypixel-react/src/components/BidList/BidList.tsx":"17","/home/ekwav/dev/Hypixel-react/src/components/AuctionList/AuctionList.tsx":"18","/home/ekwav/dev/Hypixel-react/src/components/PriceGraph/PriceGraph.tsx":"19","/home/ekwav/dev/Hypixel-react/src/utils/Hooks.tsx":"20","/home/ekwav/dev/Hypixel-react/src/components/PriceGraph/PriceGraphConfig.tsx":"21","/home/ekwav/dev/Hypixel-react/src/components/InformationDialog/InformationDialog.tsx":"22","/home/ekwav/dev/Hypixel-react/src/components/ItemPriceRange/ItemPriceRange.tsx":"23","/home/ekwav/dev/Hypixel-react/src/components/ShareButton/ShareButton.tsx":"24","/home/ekwav/dev/Hypixel-react/src/components/EnchantmentFilter/EnchantmentFilter.tsx":"25","/home/ekwav/dev/Hypixel-react/src/utils/Parser/URLParser.tsx":"26"},{"size":461,"mtime":1610033955976,"results":"27","hashOfConfig":"28"},{"size":1758,"mtime":1610210854516,"results":"29","hashOfConfig":"28"},{"size":3319,"mtime":1610210854516,"results":"30","hashOfConfig":"28"},{"size":422,"mtime":1610033955979,"results":"31","hashOfConfig":"28"},{"size":10070,"mtime":1610210854516,"results":"32","hashOfConfig":"28"},{"size":1602,"mtime":1610210854516,"results":"33","hashOfConfig":"28"},{"size":419,"mtime":1609505501569,"results":"34","hashOfConfig":"28"},{"size":1166,"mtime":1610062539147,"results":"35","hashOfConfig":"28"},{"size":419,"mtime":1610033955976,"results":"36","hashOfConfig":"28"},{"size":1973,"mtime":1610033955976,"results":"37","hashOfConfig":"28"},{"size":1365,"mtime":1610210854516,"results":"38","hashOfConfig":"28"},{"size":1189,"mtime":1610033955976,"results":"39","hashOfConfig":"28"},{"size":4937,"mtime":1610062539147,"results":"40","hashOfConfig":"28"},{"size":701,"mtime":1610210854516,"results":"41","hashOfConfig":"28"},{"size":6809,"mtime":1610062539147,"results":"42","hashOfConfig":"28"},{"size":6007,"mtime":1610062539147,"results":"43","hashOfConfig":"28"},{"size":3800,"mtime":1610034051112,"results":"44","hashOfConfig":"28"},{"size":4669,"mtime":1610034051112,"results":"45","hashOfConfig":"28"},{"size":4928,"mtime":1610210854516,"results":"46","hashOfConfig":"28"},{"size":232,"mtime":1610033955976,"results":"47","hashOfConfig":"28"},{"size":2609,"mtime":1610062539147,"results":"48","hashOfConfig":"28"},{"size":1568,"mtime":1610034051112,"results":"49","hashOfConfig":"28"},{"size":3424,"mtime":1610034051112,"results":"50","hashOfConfig":"28"},{"size":2733,"mtime":1610062539147,"results":"51","hashOfConfig":"28"},{"size":6894,"mtime":1610062539147,"results":"52","hashOfConfig":"28"},{"size":736,"mtime":1610062539150,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"jsown0",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ekwav/dev/Hypixel-react/src/index.tsx",[],["109","110"],"/home/ekwav/dev/Hypixel-react/src/routes.tsx",["111"],"import React, { Suspense } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { MatomoProvider, createInstance } from '@datapunt/matomo-tracker-react'\nimport cookie from 'cookie';\nimport { MainApp } from './components/MainApp/MainApp';\nimport { getLoadingElement } from './utils/LoadingUtils';\n\n/**\n * Import all page components here\n */\nconst PlayerDetails = React.lazy(() => import('./pages/PlayerDetails/PlayerDetails'));\nconst ItemDetails = React.lazy(() => import('./pages/ItemDetails/ItemDetails'));\nconst AuctionDetails = React.lazy(() => import('./pages/AuctionDetails/AuctionDetails'));\nconst NotFound = React.lazy(() => import('./pages/NotFound/NotFound'));\n\nconst matomoTrackingInstance = createInstance({\n  urlBase: 'https://track.coflnet.com',\n  siteId: 1,\n  disabled: !isTrackingAllowed()\n});\n\nfunction isTrackingAllowed() {\n  let cookies = cookie.parse(document.cookie);\n  if (cookies.nonEssentialCookiesAllowed !== undefined) {\n    return cookies.nonEssentialCookiesAllowed === \"true\";\n  }\n  return false;\n}\n\nfunction initFCM() {\n}\n\n\n\n/**\n * All routes go here.\n * Don't forget to import the components above after adding new route.\n */\nexport default (\n  <MatomoProvider value={matomoTrackingInstance}>\n    <Suspense fallback={getLoadingElement()}>\n      <MainApp>\n        <Switch>\n          <Route exact path=\"/\" component={() => <Redirect to=\"/item/ASPECT_OF_THE_END\" />} />\n          <Route path='/player/:uuid' component={PlayerDetails} />\n          <Route path='/item/:tag' component={ItemDetails} />\n          <Route path='/auction/:auctionUUID' component={AuctionDetails} />\n          <Route path='*' exact component={NotFound} />\n        </Switch>\n      </MainApp>\n    </Suspense>\n  </MatomoProvider>\n);","/home/ekwav/dev/Hypixel-react/src/api/WebsocketHelper.tsx",[],"/home/ekwav/dev/Hypixel-react/src/utils/LoadingUtils.tsx",[],"/home/ekwav/dev/Hypixel-react/src/api/ApiHelper.tsx",["112"],"import { parseAuction, parseAuctionDetails, parseEnchantment, parseItem, parseItemBidForList, parseItemPriceData, parsePlayerDetails, parseSearchResultItem } from \"../utils/Parser/APIResponseParser\";\nimport { RequestType } from \"./ApiTypes.d\";\nimport { websocketHelper } from './WebsocketHelper';\nimport cookie from 'cookie';\nimport { v4 as generateUUID } from 'uuid';\nimport { resolve } from \"url\";\n\nfunction initAPI(): API {\n\n    let apiErrorHandler = (requestType: RequestType, errorMessage: string, requestData: any) => {\n        console.error(\"-----------------------------------------------------------------------------------------------\")\n        console.error(\"API returned error! RequestType: \" + requestType)\n        console.error(errorMessage)\n        console.error(\"Request-Data: \")\n        console.error(requestData);\n        console.error(\"-----------------------------------------------------------------------------------------------\")\n    }\n\n    let search = (searchText: string): Promise<SearchResultItem[]> => {\n        return new Promise((resolve, reject) => {\n            websocketHelper.sendRequest({\n                type: RequestType.SEARCH,\n                data: searchText,\n                resolve: (items: any) => {\n                    resolve(items.map((item: any) => {\n                        return parseSearchResultItem(item);\n                    }));\n                },\n                reject: (error: any) => {\n                    apiErrorHandler(RequestType.SEARCH, error, searchText)\n                }\n            });\n        })\n    }\n\n    let getItemImageUrl = (item: Item): Promise<string> => {\n\n        return new Promise((resolve, reject) => {\n            if (item.tag !== null) {\n                let prefixes = [\"PET\", \"POTION\", \"RUNE\"];\n                let isSimple = true;\n                prefixes.forEach(p => {\n                    if (!item.tag || item.tag?.startsWith(p))\n                        isSimple = false;\n                });\n                // resolve early\n                if (isSimple)\n                    resolve(\"https://sky.lea.moe/item/\" + item.tag)\n            }\n\n            return getItemDetails(item.tag || item.name!).then(itemDetails => {\n                if (!itemDetails.iconUrl) {\n                    resolve(\"https://sky.lea.moe/item/\" + itemDetails.tag)\n                } else {\n                    resolve(itemDetails.iconUrl || \"\")\n                }\n            });\n        });\n    }\n\n    let getItemDetails = (itemTagOrName: string): Promise<Item> => {\n        return new Promise((resolve, reject) => {\n            websocketHelper.sendRequest({\n                type: RequestType.ITEM_DETAILS,\n                data: itemTagOrName,\n                resolve: (item: any) => {\n                    resolve(parseItem(item))\n                },\n                reject: (error: any) => {\n                    apiErrorHandler(RequestType.ITEM_DETAILS, error, itemTagOrName)\n                }\n            });\n        })\n    }\n\n    let getItemPrices = (itemTagOrName: string, fetchStart: number, reforge?: Reforge, enchantmentFilter?: EnchantmentFilter): Promise<ItemPriceData> => {\n        return new Promise((resolve) => {\n            let requestData = {\n                name: itemTagOrName,\n                start: Math.round(fetchStart / 100000) * 100,\n                reforge: reforge ? reforge.id : undefined,\n                enchantments: enchantmentFilter && enchantmentFilter.enchantment && enchantmentFilter.level ? [[enchantmentFilter.enchantment.id, enchantmentFilter.level]] : undefined\n            };\n            websocketHelper.sendRequest({\n                type: RequestType.ITEM_PRICES,\n                data: requestData,\n                resolve: (data: any) => {\n                    resolve(parseItemPriceData(data));\n                },\n                reject: (error: any) => {\n                    apiErrorHandler(RequestType.ITEM_PRICES, error, requestData)\n                }\n            });\n        })\n    }\n\n    let getPlayerDetails = (playerUUID: string): Promise<PlayerDetails> => {\n        return new Promise((resolve, reject) => {\n            websocketHelper.sendRequest({\n                type: RequestType.PLAYER_DETAIL,\n                data: playerUUID,\n                resolve: (playerData: any) => {\n                    resolve(parsePlayerDetails(playerData));\n                },\n                reject: (error: any) => {\n                    apiErrorHandler(RequestType.PLAYER_DETAIL, error, playerUUID)\n                }\n            })\n        });\n    }\n\n    let getAuctions = (uuid: string, amount: number, offset: number): Promise<Auction[]> => {\n        return new Promise((resolve, reject) => {\n            let requestData = {\n                uuid: uuid,\n                amount: amount,\n                offset: offset\n            };\n            websocketHelper.sendRequest({\n                type: RequestType.PLAYER_AUCTION,\n                data: requestData,\n                resolve: (auctions: any) => {\n                    resolve(auctions.map((auction: any) => {\n                        return parseAuction(auction);\n                    }))\n                },\n                reject: (error: any) => {\n                    apiErrorHandler(RequestType.PLAYER_AUCTION, error, requestData);\n                }\n            })\n        });\n    }\n\n    let getBids = (uuid: string, amount: number, offset: number): Promise<BidForList[]> => {\n        return new Promise((resolve, reject) => {\n            let requestData = {\n                uuid: uuid,\n                amount: amount,\n                offset: offset\n            };\n            websocketHelper.sendRequest({\n                type: RequestType.PLAYER_BIDS,\n                data: requestData,\n                resolve: (bids: any) => {\n                    resolve(bids.map((bid: any) => {\n                        return parseItemBidForList(bid);\n                    }));\n                },\n                reject: (error: any) => {\n                    apiErrorHandler(RequestType.PLAYER_BIDS, error, requestData);\n                }\n            })\n        });\n    }\n\n    let getEnchantments = (): Promise<Enchantment[]> => {\n        return new Promise((resolve, reject) => {\n            websocketHelper.sendRequest({\n                type: RequestType.ALL_ENCHANTMENTS,\n                data: \"\",\n                resolve: (enchantments: any) => {\n                    resolve(enchantments.map((enchantment: any, i: number) => {\n                        return parseEnchantment({\n                            type: enchantment,\n                            id: i + 1\n                        });\n                    }))\n                },\n                reject: (error: any) => {\n                    apiErrorHandler(RequestType.ALL_ENCHANTMENTS, error, \"\");\n                }\n            })\n        })\n    }\n\n    let trackSearch = (fullSearchId: string, fullSearchType: string): void => {\n        let requestData = {\n            id: fullSearchId,\n            type: fullSearchType\n        };\n        websocketHelper.sendRequest({\n            type: RequestType.TRACK_SEARCH,\n            data: requestData,\n            resolve: () => { },\n            reject: (error: any) => {\n                apiErrorHandler(RequestType.TRACK_SEARCH, error, requestData);\n            }\n        })\n    }\n\n    let getAuctionDetails = (auctionUUID: string): Promise<AuctionDetails> => {\n        return new Promise((resolve, reject) => {\n            websocketHelper.sendRequest({\n                type: RequestType.AUCTION_DETAILS,\n                data: auctionUUID,\n                resolve: (auctionDetails) => {\n                    resolve(parseAuctionDetails(auctionDetails));\n                },\n                reject: (error: any) => {\n                    apiErrorHandler(RequestType.AUCTION_DETAILS, error, auctionUUID);\n                }\n            })\n        })\n    }\n\n    let getPlayerName = (uuid: string): Promise<string> => {\n        return new Promise((resolve, reject) => {\n            websocketHelper.sendRequest({\n                type: RequestType.PLAYER_NAME,\n                data: uuid,\n                resolve: (name) => {\n                    resolve(name);\n                },\n                reject: (error: any) => {\n                    apiErrorHandler(RequestType.PLAYER_NAME, error, uuid);\n                }\n            })\n        });\n    }\n\n    let setConnectionId = () => {\n        let cookies = cookie.parse(document.cookie);\n        cookies.websocketUUID = cookies.websocketUUID || generateUUID();\n        document.cookie = cookie.serialize(\"websocketUUID\", cookies.websocketUUID, { expires: new Date(new Date().getFullYear() + 1, new Date().getMonth(), new Date().getDate()) });\n\n        websocketHelper.sendRequest({\n            type: RequestType.SET_CONNECTION_ID,\n            data: cookies.websocketUUID,\n            resolve: () => { },\n            reject: (error: any) => {\n                apiErrorHandler(RequestType.SET_CONNECTION_ID, error, cookies.websocketUUID);\n            }\n        })\n    }\n\n    let getVersion = (): Promise<string> => {\n        return new Promise((resolve, reject) => {\n            websocketHelper.sendRequest({\n                type: RequestType.GET_VERSION,\n                data: \"\",\n                resolve: (response) => {\n                    resolve(response);\n                },\n                reject: (error: any) => {\n                    apiErrorHandler(RequestType.GET_VERSION, error, \"\");\n                }\n            })\n        });\n    }\n\n\n    return {\n        search: search,\n        trackSearch: trackSearch,\n        getItemDetails: getItemDetails,\n        getItemPrices: getItemPrices,\n        getPlayerDetails: getPlayerDetails,\n        getAuctions: getAuctions,\n        getBids: getBids,\n        getEnchantments: getEnchantments,\n        getAuctionDetails: getAuctionDetails,\n        getItemImageUrl: getItemImageUrl,\n        getPlayerName: getPlayerName,\n        setConnectionId: setConnectionId,\n        getVersion: getVersion\n    }\n}\n\nlet api = initAPI();\n\nexport default api;","/home/ekwav/dev/Hypixel-react/src/utils/CacheUtils.tsx",[],"/home/ekwav/dev/Hypixel-react/src/pages/AuctionDetails/AuctionDetails.tsx",[],"/home/ekwav/dev/Hypixel-react/src/pages/ItemDetails/ItemDetails.tsx",[],"/home/ekwav/dev/Hypixel-react/src/pages/NotFound/NotFound.tsx",[],"/home/ekwav/dev/Hypixel-react/src/pages/PlayerDetails/PlayerDetails.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/MainApp/MainApp.tsx",[],"/home/ekwav/dev/Hypixel-react/src/utils/Formatter.tsx",[],"/home/ekwav/dev/Hypixel-react/src/utils/Parser/APIResponseParser.tsx",[],"/home/ekwav/dev/Hypixel-react/src/api/ApiTypes.d.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/AuctionDetails/AuctionDetails.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/Search/Search.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/BidList/BidList.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/AuctionList/AuctionList.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/PriceGraph/PriceGraph.tsx",[],"/home/ekwav/dev/Hypixel-react/src/utils/Hooks.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/PriceGraph/PriceGraphConfig.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/InformationDialog/InformationDialog.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/ItemPriceRange/ItemPriceRange.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/ShareButton/ShareButton.tsx",[],"/home/ekwav/dev/Hypixel-react/src/components/EnchantmentFilter/EnchantmentFilter.tsx",[],"/home/ekwav/dev/Hypixel-react/src/utils/Parser/URLParser.tsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":30,"column":10,"nodeType":"119","messageId":"120","endLine":30,"endColumn":17},{"ruleId":"117","severity":1,"message":"121","line":6,"column":10,"nodeType":"119","messageId":"120","endLine":6,"endColumn":17},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'initFCM' is defined but never used.","Identifier","unusedVar","'resolve' is defined but never used.","no-global-assign","no-unsafe-negation"]